<?xml version="1.0" encoding="UTF-8"?>
<modification>
	<id>VQMOD CORE FOR OPENCART - DO NOT REMOVE</id>
	<version>2.1.x</version>
	<vqmver required="true">2.4.0</vqmver>
	<author>Mangesh Bulkar</author>
	
	<file name="catalog/view/theme/*/template/common/footer.tpl">
            <operation>
                <search position="replace"><![CDATA[<p><?php echo $powered; ?></p>]]></search>
                <add>
                <![CDATA[<div class="row">
                    <div class="col-sm-3">
                        <p><?php echo $powered; ?></p>
                    </div>
                    <div class="col-sm-4" id="error-msg"></div>
                    <div class="col-sm-4">
                        <input type="text" class="form-control" id="input-newsletter" placeholder="<?php echo $text_newsletter_text; ?>" value="" name="newsletter">
                    </div>
                    <div class="col-sm-1">
                        <input type="button" id="subscribe" class="btn btn-primary" value="<?php echo $text_subscribe; ?>">
                    </div>
                </div>]]>
                </add>
            </operation>
        </file>
        
        <file name="catalog/language/english/common/footer.php">
            <operation>
                <search position="after"><![CDATA[$_['text_newsletter']   = 'Newsletter';]]></search>
                <add>
                <![CDATA[
                    $_['text_newsletter_text']   = 'Enter your email address';
                    $_['text_subscribe']   = 'Subscribe';
                    $_['text_error_subscribe']   = 'You have already subscribed newsletter!';
                    $_['text_success_subscribe']   = 'You have successfully subscribed newsletter!';
                ]]>
                </add>
            </operation>
        </file>
        
        <file name="catalog/controller/common/footer.php">
            <operation>
                <search position="after"><![CDATA[$data['text_newsletter'] = $this->language->get('text_newsletter');]]></search>
                <add>
                <![CDATA[
                    $data['text_newsletter_text'] = $this->language->get('text_newsletter_text');
                    $data['text_subscribe'] = $this->language->get('text_subscribe');
                    $data['text_error_subscribe'] = $this->language->get('text_error_subscribe');
                    $data['text_success_subscribe'] = $this->language->get('text_success_subscribe');
                ]]>
                </add>
            </operation>
        </file>
        <file name="catalog/controller/common/footer.php">    
            <operation>
                <search position="before"><![CDATA[public function index() {]]></search>
                <add>
                <![CDATA[
                    public function addToNewsletter(){
            
                        $email = $this->request->post['email'];
                        
                        $this->load->language('common/footer');
                        $this->load->model('account/customer');

                        $this->createNewsletterTables();
                        
                        $count = $this->checkEmailSubscribe($email);
                        
                        if($count == 0){
                            
                            $newsletter_id = $this->model_account_customer->addToNewsletter($email);
                            $msg = $this->language->get('text_success_subscribe');
                            
                        } else {
                            
                            $msg = $this->language->get('text_error_subscribe');
                        }
                        
                        echo $msg;

                    }
        
                    public function createNewsletterTables() {

                        $query = $this->db->query("CREATE TABLE IF NOT EXISTS " . DB_PREFIX . "newsletter (
                        `id` INT( 11 ) NOT NULL AUTO_INCREMENT ,
                        `email` VARCHAR( 255 ) NOT NULL ,
                        `group` VARCHAR( 25 ) NOT NULL ,
                        `date_added` DATETIME NOT NULL ,
                        PRIMARY KEY ( `id` )
                        )");
                    } 
        
                    public function checkEmailSubscribe($email){

                        $this->load->model('account/customer');

                        $count = $this->model_account_customer->checkEmailSubscribe($email);

                        return $count;

                    }
                ]]>
                </add>
            </operation>
        </file>
        
        <file name="catalog/model/account/customer.php">
            <operation>
                <search position="before"><![CDATA[public function deleteLoginAttempts($email) {]]></search>
                <add>
                <![CDATA[
                    public function addToNewsletter($email) {
		
                        $this->db->query("INSERT INTO " . DB_PREFIX . "newsletter SET email = '" . $email . "', `group` = 'newsletter', date_added = NOW()");

                        $newsletter_id = $this->db->getLastId();

                        return $newsletter_id;
                    }
        
                    public function checkEmailSubscribe($email) {

                        $query = $this->db->query("SELECT COUNT(email) AS total FROM " . DB_PREFIX . "newsletter WHERE email = '" . $email . "'");

                        return $query->row['total'];
                    }
                ]]>
                </add>
            </operation>
        </file>
        
        <file name="catalog/view/theme/*/template/common/header.tpl">
            <operation error="log">
            	<search position="after"><![CDATA[</header>]]></search>
                <add>
                <![CDATA[
                <script type="text/javascript" language="javascript"><!--
                    
                     function validateEmail($email) {
                        var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
                        return emailReg.test( $email );
                      }

                    $(document).ready(function(){
                        $('#subscribe').click(function(){
                            var email = $('#input-newsletter').val();
                            
                            if(email == ''){
                                var error = 'Please enter email address!';
                            }
                            
                            if( !validateEmail(email)) {
                                var error = 'Please enter valid email address!';
                            }
                            
                            if(error != null){
                                $('#error-msg').html('');
                                $('#error-msg').append('<b style=\"color:red\">' + error + '</b>');
                            } else {
                              
                                var dataString = 'email='+ email;
                                $.ajax({
                                    url: 'index.php?route=common/footer/addToNewsletter',
                                    type: 'post',
                                    data: dataString,
                                    success: function(html) {
                                       $('#error-msg').append('<b style=\"color:green\">' + html + '</b>');
                                    }
                                    
                                });
                            }
                            
                        })
                    });
                //--></script>
                ]]>
                </add>
            </operation>
        </file>
        
        <file name="admin/view/template/marketing/contact.tpl">
            <operation>
                <search position="after"><![CDATA[<option value="product"><?php echo $text_product; ?></option>]]></search>
                <add>
                <![CDATA[
                    <option value="only_newsletter"><?php echo $text_only_newsletter; ?></option>
                ]]>
                </add>
            </operation>
        </file>
        
        <file name="admin/language/english/marketing/contact.php">
            <operation>
                <search position="after"><![CDATA[$_['text_product']         = 'Products';]]></search>
                <add>
                <![CDATA[
                    $_['text_only_newsletter']      = 'Newsletter Subscribers';
                ]]>
                </add>
            </operation>
        </file>
        
        
        <file name="admin/controller/marketing/contact.php">
            <operation>
                <search position="after"><![CDATA[$data['text_product'] = $this->language->get('text_product');]]></search>
                <add>
                <![CDATA[
                    $data['text_only_newsletter'] = $this->language->get('text_only_newsletter');
                ]]>
                </add>
            </operation>
        </file>
        
        <file name="admin/controller/marketing/contact.php">
            <operation>
                <search position="replace"><![CDATA[$email_total = $this->model_customer_customer->getTotalCustomers($customer_data);]]></search>
                <add>
                <![CDATA[
                    $email_total = $this->model_customer_customer->getTotalCustomersEmail($customer_data);
                    
                    $results_emails = $this->model_customer_customer->getCustomersEmail($customer_data);
                                                
                    foreach ($results_emails as $result) {
			$emails[] = $result['email'];
                    }
                    
                ]]>
                </add>
            </operation>
        </file>
        
        <file name="admin/controller/marketing/contact.php">
            <operation>
                <search position="before"><![CDATA[case 'product':]]></search>
                <add>
                <![CDATA[
                    case 'only_newsletter':
                            $customer_data = array(
				'start' => ($page - 1) * 10,
				'limit' => 10
                            );
                                                    
                            $email_total = $this->model_customer_customer->getTotalCustomersEmail($customer_data);
                    
                            $results_emails = $this->model_customer_customer->getCustomersEmail($customer_data);

                            foreach ($results_emails as $result) {
                                $emails[] = $result['email'];
                            }
			
			break;
                    
                ]]>
                </add>
            </operation>
        </file>
        
        <file name="admin/model/customer/customer.php">
            <operation>
                <search position="before"><![CDATA[public function getTotalCustomers($data = array()) {]]></search>
                <add>
                <![CDATA[
                    public function getTotalCustomersEmail($data = array()) {
                        $sql = "SELECT COUNT(*) AS total FROM " . DB_PREFIX . "customer";

                        $implode = array();

                        if (!empty($data['filter_name'])) {
                                $implode[] = "CONCAT(firstname, ' ', lastname) LIKE '%" . $this->db->escape($data['filter_name']) . "%'";
                        }

                        if (!empty($data['filter_email'])) {
                                $implode[] = "email LIKE '" . $this->db->escape($data['filter_email']) . "%'";
                        }

                        if (isset($data['filter_newsletter']) && !is_null($data['filter_newsletter'])) {
                                $implode[] = "newsletter = '" . (int)$data['filter_newsletter'] . "'";
                        }

                        if (!empty($data['filter_customer_group_id'])) {
                                $implode[] = "customer_group_id = '" . (int)$data['filter_customer_group_id'] . "'";
                        }

                        if (!empty($data['filter_ip'])) {
                                $implode[] = "customer_id IN (SELECT customer_id FROM " . DB_PREFIX . "customer_ip WHERE ip = '" . $this->db->escape($data['filter_ip']) . "')";
                        }

                        if (isset($data['filter_status']) && !is_null($data['filter_status'])) {
                                $implode[] = "status = '" . (int)$data['filter_status'] . "'";
                        }

                        if (isset($data['filter_approved']) && !is_null($data['filter_approved'])) {
                                $implode[] = "approved = '" . (int)$data['filter_approved'] . "'";
                        }

                        if (!empty($data['filter_date_added'])) {
                                $implode[] = "DATE(date_added) = DATE('" . $this->db->escape($data['filter_date_added']) . "')";
                        }

                        if ($implode) {
                                $sql .= " WHERE " . implode(" AND ", $implode);
                        }

                        $query = $this->db->query($sql);

                        $registerd_total = $query->row['total'];

                        $sql_email = "SELECT COUNT(email) AS total FROM " . DB_PREFIX . "newsletter";

                        $query_email = $this->db->query($sql_email);

                        $subcribe_total = $query_email->row['total'];

                        $final_count = $registerd_total + $subcribe_total;

                        return $final_count;
                    }
                    
                    public function getCustomersEmail($data = array()) {
		
                        $sql = "SELECT email FROM " . DB_PREFIX . "newsletter ";

                        if (isset($data['start']) || isset($data['limit'])) {
                                if ($data['start'] < 0) {
                                        $data['start'] = 0;
                                }

                                if ($data['limit'] < 1) {
                                        $data['limit'] = 20;
                                }

                                $sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
                        }

                        $query = $this->db->query($sql);

                        return $query->rows;
                    }

                ]]>
                </add>
            </operation>
        </file>
        
</modification>